# Generated by Django 5.2.5 on 2025-09-18 11:27

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('course_code', models.CharField(max_length=20, unique=True)),
                ('course_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('geo_fence_lat', models.DecimalField(blank=True, decimal_places=8, help_text='Latitude of geo-fence center', max_digits=10, null=True)),
                ('geo_fence_lng', models.DecimalField(blank=True, decimal_places=8, help_text='Longitude of geo-fence center', max_digits=11, null=True)),
                ('geo_fence_radius', models.PositiveIntegerField(default=100, help_text='Radius of geo-fence in meters', validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(1000)])),
                ('level', models.CharField(choices=[('100', '100 Level'), ('200', '200 Level'), ('300', '300 Level'), ('400', '400 Level'), ('500', '500 Level')], max_length=10)),
                ('section', models.CharField(choices=[('morning', 'Full Time (Morning)'), ('evening', 'Part Time (Evening)'), ('weekend', 'Distance (Weekend)')], max_length=50)),
                ('join_pin', models.CharField(blank=True, max_length=6, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teaching_classes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Classes',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('teacher', 'Teacher'), ('student', 'Student')], default='student', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('location_permission_granted', models.BooleanField(default=False)),
                ('location_data_retention_days', models.PositiveIntegerField(default=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('P', 'Present'), ('A', 'Absent'), ('L', 'Late'), ('E', 'Excused')], default='A', max_length=1)),
                ('check_in_time', models.DateTimeField(blank=True, null=True)),
                ('check_in_lat', models.DecimalField(blank=True, decimal_places=8, help_text="Latitude reported by student's device", max_digits=10, null=True)),
                ('check_in_lng', models.DecimalField(blank=True, decimal_places=8, help_text="Longitude reported by student's device", max_digits=11, null=True)),
                ('check_in_accuracy', models.DecimalField(blank=True, decimal_places=2, help_text='GPS accuracy in meters reported by device', max_digits=6, null=True)),
                ('verified_distance', models.DecimalField(blank=True, decimal_places=2, help_text='Calculated distance from geo-fence center in meters', max_digits=8, null=True)),
                ('is_valid_location', models.BooleanField(default=False)),
                ('verification_notes', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='marked_attendance', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to=settings.AUTH_USER_MODEL)),
                ('class_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='attendance.class')),
            ],
            options={
                'ordering': ['-date', '-check_in_time'],
                'unique_together': {('student', 'class_session', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('class_enrolled', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='attendance.class')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('student', 'class_enrolled')},
            },
        ),
    ]
